main {
  max-height: 100vh;
  overflow: auto;
}
.container {
  padding: 1.5rem;
  padding-top: 0.5rem;
  display: grid;
  grid-gap: 1rem;
  header {
    h3 {
      font-weight: 500;
      margin-bottom: 0.5rem;
    }
    .note {
      font-size: 0.8rem;
      padding: 0.4rem;
      border-radius: 4px;
      border: 1px solid #b7d7df;
      color: #236a89;
      background: #d6f1f8;
      display: flex;
      align-items: center;
      grid-gap: 0.5rem;
      svg {
        font-size: 0.9rem;
      }
    }
  }
  .content {
    display: grid;
    grid-gap: 1rem;
  }
  .box {
    .head {
      display: flex;
      align-items: center;
      justify-content: space-between;
      color: #3f5182;
      position: relative;
      margin-bottom: 0.5rem;
      h4 {
        background: white;
        padding: 0 0.5rem;
        margin-left: 1rem;
        font-size: 1rem;
      }
      &::before {
        z-index: -1;
        position: absolute;
        content: "";
        display: block;
        height: 1px;
        width: 100%;
        background-color: rgb(135, 135, 135);
      }
      button {
        font-size: 1.4rem;
        color: rgb(135, 135, 135);
        background: white;
      }
    }
    .boxContent {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
      grid-gap: 1rem;
      grid-column-gap: 2rem;
      &.typeOfIncident {
        grid-template-columns: 1fr;
      }
    }
    .typeOfIncident {
      display: grid;
      grid-gap: 1rem;
    }
    .adverseEvent {
      width: 100%;
      display: grid;
      tr {
        display: grid;
      }
      thead {
        display: block;
        border: 1px solid rgb(181, 181, 182);
        tr {
          color: white;
          th {
            font-weight: 400 !important;
          }
          padding: 0.5rem;
          text-align: left;
          grid-template-columns: 1fr;
          background: #647299;
        }
      }
      tbody {
        tr {
          grid-template-columns: 20rem 1fr;
          align-items: center;
          padding: 0.5rem;
          border: 1px solid rgb(181, 181, 182);
          border-top: none;
          &:nth-child(2n) {
            background: #f3f3f3;
          }
        }
      }
    }
  }
}

.input {
  display: grid;
  position: relative;
  label {
    font-size: 0.8rem;
    font-weight: 500;
    margin-bottom: 0.2rem;
  }
  input {
    border: 1px solid rgb(196, 196, 196);
    padding: 0.6rem 0.5rem;
    &[type="datetime-local"] {
      padding: 0.4rem 0.5rem;
    }
  }
  svg {
    position: absolute;
    top: 1.3rem;
    bottom: 0rem;
    margin: auto;
    right: 0.4rem;
  }
}
.switchInput {
  display: grid;
  label {
    font-size: 0.8rem;
    font-weight: 500;
    margin-bottom: 0.2rem;
  }
  .btns {
    border: 1px solid rgb(29, 103, 145);
    width: max-content;
    border-radius: 5px;
    overflow: hidden;
    cursor: pointer;
    span {
      font-size: 0.9rem;
      display: inline-block;
      padding: 0.5rem 1.5rem;
      background-color: rgb(231, 245, 254);
    }
    .active {
      background: #3f5183;
      color: white;
    }
  }
}
.radio {
  display: flex;
  flex-wrap: wrap;
  grid-gap: 1.5rem;
  grid-row-gap: 0.5rem;
  label {
    position: relative;
    cursor: pointer;
    align-items: center;
    display: flex;
    grid-gap: 0.3rem;
    font-size: 0.95rem;
    &.disabled {
      pointer-events: none;
      opacity: 0.5;
    }
    .hint {
      display: none;
      position: absolute;
      background: white;
      padding: 0.5rem;
      width: 13rem;
      font-size: 0.85rem;
      z-index: 5;
      top: calc(100% + 0.9rem);
      left: 0;
      filter: drop-shadow(0 0 2px rgba(0, 0, 0, 0.5));
      border-radius: 5px;
      pointer-events: none;
      &::before {
        content: "";
        display: block;
        width: 0;
        height: 0;
        border: 0.5rem solid transparent;
        border-top: 0;
        border-bottom: 0.7rem solid white;
        position: absolute;
        left: 1.5rem;
        top: -0.7rem;
      }
    }
    &:hover {
      .hint {
        display: block;
      }
    }
  }
}
